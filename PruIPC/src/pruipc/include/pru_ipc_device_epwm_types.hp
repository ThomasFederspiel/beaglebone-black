/*
 * pru_ipc_device_epwm_types.hp
 *
 *  Created on: 4 jan 2016
 *      Author: Thomas
 */

#ifndef PRU_IPC_DEVICE_EPWM_TYPES_HP_
#define PRU_IPC_DEVICE_EPWM_TYPES_HP_

#include <stdint.h>
#include <stdbool.h>

#include "pru_ipc_types.hp"
#include "pru_pwms_types.hp"
#include "pru_epwm_types.hp"

enum IPCDeviceEPwmIoctlEnum
{
	IPCDeviceEPwm_Open = 0,
	IPCDeviceEPwm_Close,
	IPCDeviceEPwm_Enable,
	IPCDeviceEPwm_Disable,
	IPCDeviceEPwm_ArmRaw,
	IPCDeviceEPwm_SetFreq,
	IPCDeviceEPwm_SetDuty,
	IPCDeviceEPwm_SetPin
};

struct __attribute__((__packed__)) IPCDeviceEPwm_Close
{
	struct IPCDeviceIoctl device;
	uint16_t /* PwmssDeviceEnum */ pwmssDevice;
};

struct __attribute__((__packed__)) IPCDeviceEPwm_Open
{
	struct IPCDeviceIoctl device;
	uint16_t /* PwmssDeviceEnum */ pwmssDevice;
};

struct __attribute__((__packed__)) IPCDeviceEPwm_Enable
{
	struct IPCDeviceIoctl device;
	uint16_t /* PwmssDeviceEnum */ pwmssDevice;
	uint16_t /* EPwmChannelEnum */ pwmCh;
};

struct __attribute__((__packed__)) IPCDeviceEPwm_Disable
{
	struct IPCDeviceIoctl device;
	uint16_t /* PwmssDeviceEnum */ pwmssDevice;
	uint16_t /* EPwmChannelEnum */ pwmCh;
	uint8_t /* bool */ outputHigh;
};

struct __attribute__((__packed__)) IPCDeviceEPwm_ArmRaw
{
	struct IPCDeviceIoctl device;
	uint16_t /* PwmssDeviceEnum */ pwmssDevice;
	uint16_t periodCntr;
	uint8_t clkDiv;
	uint8_t hspClkDiv;
};

struct __attribute__((__packed__)) IPCDeviceEPwm_SetFreq
{
	struct IPCDeviceIoctl device;
	uint16_t /* PwmssDeviceEnum */ pwmssDevice;
	uint16_t periodCntr;
};

struct __attribute__((__packed__)) IPCDeviceEPwm_SetDuty
{
	struct IPCDeviceIoctl device;
	uint16_t /* PwmssDeviceEnum */ pwmssDevice;
	uint16_t /* EPwmChannelEnum */ pwmCh;
	uint16_t onTime;
};

struct __attribute__((__packed__)) IPCDeviceEPwm_SetPin
{
	struct IPCDeviceIoctl device;
	uint16_t /* PwmssDeviceEnum */ pwmssDevice;
	uint16_t /* EPwmChannelEnum */ pwmCh;
	uint8_t /* bool */ high;
};

#endif /* PRU_IPC_DEVICE_EPWM_TYPES_HP_ */
