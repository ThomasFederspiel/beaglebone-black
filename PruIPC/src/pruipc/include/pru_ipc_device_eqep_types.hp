/*
 * pru_ipc_device_eqep_types.hp
 *
 *  Created on: 4 jan 2016
 *      Author: Thomas
 */

#ifndef PRU_IPC_DEVICE_EQEP_TYPES_HP_
#define PRU_IPC_DEVICE_EQEP_TYPES_HP_

#include <stdint.h>

#include "pru_ipc_types.hp"
#include "pru_pwms_types.hp"
#include "pru_eqep_types.hp"

enum IPCDeviceEQepIoctlEnum
{
	IPCDeviceEQep_Status = 0,
	IPCDeviceEQep_EnableQuadrature,
	IPCDeviceEQep_disable
};

struct IPCDeviceEQep_EnableQuadrature
{
	struct IPCDeviceIoctl device;
	PwmssDeviceEnum pwmssDevice;
	EQepUnitTimerPeriod utimerPeriod; 
	EQepCapClkDivisor capClkDivisor; 
	EQepUpEventDivisor upEventDivisor;
};

struct IPCDeviceEQep_disable
{
	struct IPCDeviceIoctl device;
	PwmssDeviceEnum pwmssDevice;
};

struct IPCDeviceEQep_Status
{
	struct IPCDeviceIoctl device;
	PwmssDeviceEnum pwmssDevice;
	
	// Position counter value latched when unit timer match has occured
	uint32_t capCounter;
	
	// ;+
	uint32_t capTime;
	
	// ;+ Time passed during a unit period defined by QCAP_UPEVNT_DIV 
	uint32_t capPeriod;
	
	uint32_t capStatus;
	
	uint32_t intrStatus;
	
	// Count of number of pulses
	uint32_t counter;
};

enum IPCDeviceEQep_CapStatusEnum
{
	// Indicates (= 1) that counter value not consistent with value exepcted
	// when index marker detected (expected value is either 0 or QPOSMAX)
	EQepCapStatus_PositionCounterError = BIT(0),
	
	// Indicates (= 1) that index marker has been detected
	EQepCapStatus_FirstIndexMarker = BIT(1),
	
	// Count direction has changed during unit position events. Capture period (CapPeriod) not valid
	EQepCapStatus_CaptureDirError = BIT(2),
	
	// Capture timer has overflown (= 1), indicats too long time has passed between unit position
	// events. Capture period (CapPeriod) not valid
	EQepCapStatus_CaptureOverflowError = BIT(3),

	// Indicates direction on count (up/clockwise/forward = 1, down/counter-clockwise/reverse = 0) on every index marker
	EQepCapStatus_DirectionLatchFlag = BIT(4),
	
	// Indicates direction on count (up/clockwise/forward = 1, down/counter-clockwise/reverse = 0) on index marker for 
	EQepCapStatus_QuadratureDirFlag = BIT(5),
	
	// Indicates direction on count (up/clockwise/forward = 1, down/counter-clockwise/reverse = 0) when first index marker has been detected
	EQepCapStatus_DirectionFirstIndexMarker = BIT(6),
	
	// Indicates (= 1) that unit position event has occured. Capture period (CapPeriod) is valid
	EQepCapStatus_UnitEventPositionFlag = BIT(7)
};

#endif /* PRU_IPC_DEVICE_EQEP_TYPES_HP_ */
