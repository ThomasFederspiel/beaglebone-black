/*
 * pru_oer.pc
 *
 *  Created on: 25 dec 2015
 *      Author: Thomas
 */

#include "pru_per.hp"

#include "pru_reg.hp"

volatile uint32_t* const perModuleClkTable[] =
{
	&CM_PER.EPWMSS0_CLKCTLR,
	&CM_PER.EPWMSS1_CLKCTLR,
	&CM_PER.EPWMSS2_CLKCTLR
};

uint32_t getModuleClockRegister(const PerModuleClkEnum clk)
{
	volatile uint32_t* const modClk = perModuleClkTable[clk];

	return *modClk;
}

void enableModuleClock(const PerModuleClkEnum clk)
{
	volatile uint32_t* const modClk = perModuleClkTable[clk];

	*modClk = PER_MODULE_MODE_EN;
	
	/* Enable module clock signal generation */
	while ((*modClk & PER_MODULE_MODE) != PER_MODULE_MODE_EN);
}

void disableModuleClock(const PerModuleClkEnum clk)
{
	volatile uint32_t* const modClk = perModuleClkTable[clk];
	
	*modClk = PER_MODULE_MODE_DIS;
	
	/* Disable module clock signal generation */
// ;+ while ((*modClk & PER_MODULE_MODE) != PER_MODULE_MODE_DIS);
}
